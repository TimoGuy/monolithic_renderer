#version 460
#extension GL_GOOGLE_include_directive : enable

layout (local_size_x = 128) in;


// Per frame data (set = 0).
#include "geom_per_frame_datas_set0.glsl"


// Instance bounding spheres (set = 1).

// Matches `GPU_bounding_sphere`.
struct Bounding_sphere
{
    vec4 origin_xyz_radius_w;
};
layout(std140, set = 1, binding = 0) readonly buffer Bounding_sphere_buffer
{
    Bounding_sphere bounding_spheres[];
} bounding_sphere_buffer;


// Visible result data (set = 2).
layout(std140, set = 2, binding = 0) writeonly buffer Visible_result_buffer
{
    uint results[];
} visible_result_buffer;


// Params.
layout(push_constant) uniform Params
{
    float z_near;
    float z_far;
    float frustum_x_x;
    float frustum_x_z;
    float frustum_y_y;
    float frustum_y_z;
    uint  culling_enabled;
    uint  num_instances;
} params;


bool is_visible(uint instance_idx)
{
    if (params.culling_enabled == 1)
    {
        // @TODO: IMPLEMENT.
        return false;
    }
    return true;
}

void main()
{
    uint instance_idx = gl_GlobalInvocationID.x;
    if (instance_idx < params.num_instances)
    {
        visible_result_buffer.results[instance_idx] =
            (is_visible(instance_idx) ? 1 : 0);
    }
}
